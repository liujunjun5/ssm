<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.mappers.ProductCommentMappers">
	<!--实体映射-->
	<resultMap id="base_result_map" type="com.work.entity.po.ProductComment">
		<!-- 评论ID -->
		<id column="comment_id" property="commentId"/>
		<!-- 商品ID -->
		<result column="product_id" property="productId"/>
		<!-- 商品用户ID -->
		<result column="product_user_id" property="productUserId"/>
		<!-- 回复内容 -->
		<result column="content" property="content"/>
		<!-- 图片 -->
		<result column="img_path" property="imgPath"/>
		<!-- 用户ID -->
		<result column="user_id" property="userId"/>
		<!-- 回复人ID -->
		<result column="reply_user_id" property="replyUserId"/>
		<!-- 0:未置顶  1:置顶 -->
		<result column="top_type" property="topType"/>
		<!-- 发布时间 -->
		<result column="post_time" property="postTime"/>

	</resultMap>

	<!--通用查询列-->
	<sql id="base_column_list">
		comment_id,product_id,product_user_id,content,img_path,user_id,reply_user_id,top_type,post_time
	</sql>

	<!--查询最大CommentId-->
	<select id="findMaxCommentId" resultType="java.lang.Integer">
		SELECT MAX(comment_id) FROM product_comment
	</select>

	<!--基础查询条件-->
	<sql id="base_query_condition">

		<if test="query.commentId!=null">
			and comment_id = #{query.commentId}
		</if>
		<if test="query.productId!=null and query.productId!=''">
			and product_id = #{query.productId}
		</if>
		<if test="query.productUserId!=null and query.productUserId!=''">
			and product_user_id = #{query.productUserId}
		</if>
		<if test="query.content!=null and query.content!=''">
			and content = #{query.content}
		</if>
		<if test="query.imgPath!=null and query.imgPath!=''">
			and img_path = #{query.imgPath}
		</if>
		<if test="query.userId!=null and query.userId!=''">
			and user_id = #{query.userId}
		</if>
		<if test="query.replyUserId!=null and query.replyUserId!=''">
			and reply_user_id = #{query.replyUserId}
		</if>
		<if test="query.topType!=null">
			and top_type = #{query.topType}
		</if>
		<if test="query.postTime!=null">
			and post_time = #{query.postTime}
		</if>
	</sql>

	<!--拓展的查询条件-->
	<sql id="base_query_condition_extend">
		<if test="query.productIdFuzzy!=null and query.productIdFuzzy!=''">
			and product_id like concat ('%', #{query.productIdFuzzy}, '%')
		</if>
		<if test="query.productUserIdFuzzy!=null and query.productUserIdFuzzy!=''">
			and product_user_id like concat ('%', #{query.productUserIdFuzzy}, '%')
		</if>
		<if test="query.contentFuzzy!=null and query.contentFuzzy!=''">
			and content like concat ('%', #{query.contentFuzzy}, '%')
		</if>
		<if test="query.imgPathFuzzy!=null and query.imgPathFuzzy!=''">
			and img_path like concat ('%', #{query.imgPathFuzzy}, '%')
		</if>
		<if test="query.userIdFuzzy!=null and query.userIdFuzzy!=''">
			and user_id like concat ('%', #{query.userIdFuzzy}, '%')
		</if>
		<if test="query.replyUserIdFuzzy!=null and query.replyUserIdFuzzy!=''">
			and reply_user_id like concat ('%', #{query.replyUserIdFuzzy}, '%')
		</if>
		<if test="query.postTimeStart!=null and query.postTimeStart!=''">
			<![CDATA[ and post_time>=str_to_date(#{query.postTimeStart}, '%Y-%m-%d') ]]>
		</if>
		<if test="query.postTimeEnd!=null and query.postTimeEnd!=''">
			<![CDATA[ and post_time< date_sub(str_to_date(#{query.postTimeEnd},'%Y-%m-%d')，interval -1 day) ]]>
		</if>

	</sql>

	<!--通用的查询条件-->
	<sql id="query_condition">
		<where>
			<include refid="base_query_condition"/>
			<include refid="base_query_condition_extend"/>
		</where>
	</sql>

	<!--查询列表-->
	<select id = "selectList" resultMap="base_result_map">
		SELECT
		<include refid="base_column_list"/>
		FROM product_comment
		<include refid="query_condition"/>
		<if test="query.orderBy!=null">order by ${query.orderBy}</if>
		<if test="query.simplePage!=null">limit #{query.simplePage.start},#{query.simplePage.end}</if>
	</select>

	<!--查询数量-->
	<select id = "selectCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM product_comment
		<include refid="query_condition"/>
	</select>

	<!--插入 （匹配有值的字段）-->
	<!--注意：此处有改动，原文为keyProperty="bean.comment_id，会导致数据回填时在ProductComment类中找不到对应属性与setter方法-->
	<insert id = "insert" parameterType="com.work.entity.po.ProductComment">
		<selectKey keyProperty="bean.commentId" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO product_comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.commentId != null">
				comment_id,
			</if>
			<if test="bean.productId != null">
				product_id,
			</if>
			<if test="bean.productUserId != null">
				product_user_id,
			</if>
			<if test="bean.content != null">
				content,
			</if>
			<if test="bean.imgPath != null">
				img_path,
			</if>
			<if test="bean.userId != null">
				user_id,
			</if>
			<if test="bean.replyUserId != null">
				reply_user_id,
			</if>
			<if test="bean.topType != null">
				top_type,
			</if>
			<if test="bean.postTime != null">
				post_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.commentId != null">
				#{bean.commentId},
			</if>
			<if test="bean.productId != null">
				#{bean.productId},
			</if>
			<if test="bean.productUserId != null">
				#{bean.productUserId},
			</if>
			<if test="bean.content != null">
				#{bean.content},
			</if>
			<if test="bean.imgPath != null">
				#{bean.imgPath},
			</if>
			<if test="bean.userId != null">
				#{bean.userId},
			</if>
			<if test="bean.replyUserId != null">
				#{bean.replyUserId},
			</if>
			<if test="bean.topType != null">
				#{bean.topType},
			</if>
			<if test="bean.postTime != null">
				#{bean.postTime},
			</if>
		</trim>
	</insert>

		<!-- 插入或者更新 （匹配有值的字段） -->
	<insert id = "insertOrUpdate" parameterType="com.work.entity.po.ProductComment">
		INSERT INTO product_comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.commentId != null">
				comment_id,
			</if>
			<if test="bean.productId != null">
				product_id,
			</if>
			<if test="bean.productUserId != null">
				product_user_id,
			</if>
			<if test="bean.content != null">
				content,
			</if>
			<if test="bean.imgPath != null">
				img_path,
			</if>
			<if test="bean.userId != null">
				user_id,
			</if>
			<if test="bean.replyUserId != null">
				reply_user_id,
			</if>
			<if test="bean.topType != null">
				top_type,
			</if>
			<if test="bean.postTime != null">
				post_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.commentId != null">
				#{bean.commentId},
			</if>
			<if test="bean.productId != null">
				#{bean.productId},
			</if>
			<if test="bean.productUserId != null">
				#{bean.productUserId},
			</if>
			<if test="bean.content != null">
				#{bean.content},
			</if>
			<if test="bean.imgPath != null">
				#{bean.imgPath},
			</if>
			<if test="bean.userId != null">
				#{bean.userId},
			</if>
			<if test="bean.replyUserId != null">
				#{bean.replyUserId},
			</if>
			<if test="bean.topType != null">
				#{bean.topType},
			</if>
			<if test="bean.postTime != null">
				#{bean.postTime},
			</if>
		</trim>
		on DUPLICATE key update
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.productId != null">
				 product_id = VALUES(product_id)
			</if>
			<if test="bean.productUserId != null">
				 product_user_id = VALUES(product_user_id)
			</if>
			<if test="bean.content != null">
				 content = VALUES(content)
			</if>
			<if test="bean.imgPath != null">
				 img_path = VALUES(img_path)
			</if>
			<if test="bean.userId != null">
				 user_id = VALUES(user_id)
			</if>
			<if test="bean.replyUserId != null">
				 reply_user_id = VALUES(reply_user_id)
			</if>
			<if test="bean.topType != null">
				 top_type = VALUES(top_type)
			</if>
			<if test="bean.postTime != null">
				 post_time = VALUES(post_time)
			</if>
		</trim>
	</insert>

	<!-- 批量插入 -->
	<insert id ="insertBatch" parameterType="com.work.entity.po.ProductComment">
		INSERT INTO product_comment(product_id,product_user_id,content,img_path,user_id,reply_user_id,top_type,post_time) VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.productId},#{item.productUserId},#{item.content},#{item.imgPath},#{item.userId},#{item.replyUserId},#{item.topType},#{item.postTime})
		</foreach>
	</insert>

	<!-- 批量插入（或者更新） -->
	<insert id ="insertOrUpdateBatch" parameterType="com.work.entity.po.ProductComment">
		INSERT INTO product_comment(product_id,product_user_id,content,img_path,user_id,reply_user_id,top_type,post_time) VALUES
		<foreach collection="list" item="item" separator="," >
			(#{item.productId},#{item.productUserId},#{item.content},#{item.imgPath},#{item.userId},#{item.replyUserId},#{item.topType},#{item.postTime})
		</foreach>
			on DUPLICATE key update
			product_id= VALUES(product_id),product_user_id= VALUES(product_user_id),content= VALUES(content),img_path= VALUES(img_path),user_id= VALUES(user_id),reply_user_id= VALUES(reply_user_id),top_type= VALUES(top_type),post_time= VALUES(post_time)
	</insert>

	<!-- 根据CommentId查询 -->
	<select id="selectByCommentId" resultMap="base_result_map">
		select <include refid="base_column_list"/> from product_comment where comment_id=#{commentId}
	</select>

	<!-- 根据CommentId更新 -->
	<update id="updateByCommentId" parameterType="com.work.entity.po.ProductComment">
		update product_comment
		<set>
			<if test="bean.commentId != null">
				comment_id = #{bean.commentId},
			</if>
			<if test="bean.productId != null">
				product_id = #{bean.productId},
			</if>
			<if test="bean.productUserId != null">
				product_user_id = #{bean.productUserId},
			</if>
			<if test="bean.content != null">
				content = #{bean.content},
			</if>
			<if test="bean.imgPath != null">
				img_path = #{bean.imgPath},
			</if>
			<if test="bean.userId != null">
				user_id = #{bean.userId},
			</if>
			<if test="bean.replyUserId != null">
				reply_user_id = #{bean.replyUserId},
			</if>
			<if test="bean.topType != null">
				top_type = #{bean.topType},
			</if>
			<if test="bean.postTime != null">
				post_time = #{bean.postTime},
			</if>
		</set>
		where comment_id=#{commentId}
	</update>

	<!-- 根据CommentId删除 -->
	<delete id="deleteByCommentId">
		delete from product_comment where comment_id=#{commentId}
	</delete>
</mapper>