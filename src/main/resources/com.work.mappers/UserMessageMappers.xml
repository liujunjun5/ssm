<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.mappers.UserMessageMappers">
	<!--实体映射-->
	<resultMap id="base_result_map" type="com.work.entity.po.UserMessage">
		<!-- 消息ID自增 -->
		<id column="message_id" property="messageId"/>
		<!-- 用户ID -->
		<result column="user_id" property="userId"/>
		<!-- 主体ID -->
		<result column="product_id" property="productId"/>
		<!-- 消息类型 -->
		<result column="message_type" property="messageType"/>
		<!-- 发送人ID -->
		<result column="send_user_id" property="sendUserId"/>
		<!-- 0:未读 1:已读 -->
		<result column="read_type" property="readType"/>
		<!-- 创建时间 -->
		<result column="create_time" property="createTime"/>

		<!-- 其他字段映射 -->
		<result column="sendUserAvatar" property="sendUserAvatar"/>
		<result column="sendUserName" property="sendUserName"/>
		<result column="productName" property="productName"/>
		<result column="productCover" property="productCover"/>

	</resultMap>

	<!--通用查询列-->
	<!--指明user_id来源为u表，即user_message-->
	<sql id="base_column_list">
		message_id,u.user_id,p.product_id,message_type,send_user_id,read_type,u.create_time
	</sql>

	<!--基础查询条件-->
	<sql id="base_query_condition">

		<if test="query.messageId!=null">
			and message_id = #{query.messageId}
		</if>
		<if test="query.userId!=null and query.userId!=''">
			and u.user_id = #{query.userId}
		</if>
		<if test="query.productId!=null and query.productId!=''">
			and p.product_id = #{query.productId}
		</if>
		<if test="query.messageType!=null">
			and message_type = #{query.messageType}
		</if>
		<if test="query.sendUserId!=null and query.sendUserId!=''">
			and send_user_id = #{query.sendUserId}
		</if>
		<if test="query.readType!=null">
			and read_type = #{query.readType}
		</if>
		<if test="query.createTime!=null">
			and u.create_time = #{query.createTime}
		</if>
	</sql>

	<!--拓展的查询条件-->
	<sql id="base_query_condition_extend">
		<if test="query.userIdFuzzy!=null and query.userIdFuzzy!=''">
			and u.user_id like concat ('%', #{query.userIdFuzzy}, '%')
		</if>
		<if test="query.productIdFuzzy!=null and query.productIdFuzzy!=''">
			and p.product_id like concat ('%', #{query.productIdFuzzy}, '%')
		</if>
		<if test="query.sendUserIdFuzzy!=null and query.sendUserIdFuzzy!=''">
			and send_user_id like concat ('%', #{query.sendUserIdFuzzy}, '%')
		</if>
		<if test="query.createTimeStart!=null and query.createTimeStart!=''">
			<![CDATA[ and u.create_time>=str_to_date(#{query.createTimeStart}, '%Y-%m-%d') ]]>
		</if>
		<if test="query.createTimeEnd!=null and query.createTimeEnd!=''">
			<![CDATA[ and u.create_time< date_sub(str_to_date(#{query.createTimeEnd},'%Y-%m-%d'),interval -1 day) ]]>
		</if>

	</sql>

	<!--通用的查询条件-->
	<sql id="query_condition">
		<where>
			<include refid="base_query_condition"/>
			<include refid="base_query_condition_extend"/>
		</where>
	</sql>

	<!--查询最大messageId-->
	<select id="findMaxMessageId" resultType="java.lang.Integer">
		SELECT MAX(message_id) FROM user_message
	</select>

	<!--查询列表-->
	<select id = "selectList" resultMap="base_result_map">
		SELECT
		<include refid="base_column_list"/>
		    ,user.avatar AS sendUserAvatar,user.nick_name AS sendUserName,p.product_name AS productName,p.image_url AS productCover,
		    u.user_id AS userId,p.product_id AS productId,u.create_time As createTime
		FROM user_message u
		LEFT JOIN product_info p ON p.product_id = u.product_id
		LEFT JOIN user_info user ON user.user_id = u.user_id
		<include refid="query_condition"/>
		<if test="query.orderBy!=null">order by ${query.orderBy}</if>
		<if test="query.simplePage!=null">limit #{query.simplePage.start},#{query.simplePage.end}</if>
	</select>

	<!--查询数量-->
	<select id = "selectCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM user_message u
		<include refid="query_condition"/>
	</select>

	<!--插入 （匹配有值的字段）-->
	<!--注意：此处有改动，原文为keyProperty="bean.message_id，会导致数据回填时在UserMessage类中找不到对应属性与setter方法-->
	<insert id = "insert" parameterType="com.work.entity.po.UserMessage">
		<selectKey keyProperty="bean.messageId" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO user_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.messageId != null">
				message_id,
			</if>
			<if test="bean.userId != null">
				user_id,
			</if>
			<if test="bean.productId != null">
				product_id,
			</if>
			<if test="bean.messageType != null">
				message_type,
			</if>
			<if test="bean.sendUserId != null">
				send_user_id,
			</if>
			<if test="bean.readType != null">
				read_type,
			</if>
			<if test="bean.createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.messageId != null">
				#{bean.messageId},
			</if>
			<if test="bean.userId != null">
				#{bean.userId},
			</if>
			<if test="bean.productId != null">
				#{bean.productId},
			</if>
			<if test="bean.messageType != null">
				#{bean.messageType},
			</if>
			<if test="bean.sendUserId != null">
				#{bean.sendUserId},
			</if>
			<if test="bean.readType != null">
				#{bean.readType},
			</if>
			<if test="bean.createTime != null">
				#{bean.createTime},
			</if>
		</trim>
	</insert>

		<!-- 插入或者更新 （匹配有值的字段） -->
	<insert id = "insertOrUpdate" parameterType="com.work.entity.po.UserMessage">
		INSERT INTO user_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.messageId != null">
				message_id,
			</if>
			<if test="bean.userId != null">
				user_id,
			</if>
			<if test="bean.productId != null">
				product_id,
			</if>
			<if test="bean.messageType != null">
				message_type,
			</if>
			<if test="bean.sendUserId != null">
				send_user_id,
			</if>
			<if test="bean.readType != null">
				read_type,
			</if>
			<if test="bean.createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.messageId != null">
				#{bean.messageId},
			</if>
			<if test="bean.userId != null">
				#{bean.userId},
			</if>
			<if test="bean.productId != null">
				#{bean.productId},
			</if>
			<if test="bean.messageType != null">
				#{bean.messageType},
			</if>
			<if test="bean.sendUserId != null">
				#{bean.sendUserId},
			</if>
			<if test="bean.readType != null">
				#{bean.readType},
			</if>
			<if test="bean.createTime != null">
				#{bean.createTime},
			</if>
		</trim>
		on DUPLICATE key update
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.userId != null">
				 user_id = VALUES(user_id)
			</if>
			<if test="bean.productId != null">
				 product_id = VALUES(product_id)
			</if>
			<if test="bean.messageType != null">
				 message_type = VALUES(message_type)
			</if>
			<if test="bean.sendUserId != null">
				 send_user_id = VALUES(send_user_id)
			</if>
			<if test="bean.readType != null">
				 read_type = VALUES(read_type)
			</if>
			<if test="bean.createTime != null">
				 create_time = VALUES(create_time)
			</if>
		</trim>
	</insert>

	<!-- 批量插入 -->
	<insert id ="insertBatch" parameterType="com.work.entity.po.UserMessage">
		INSERT INTO user_message(user_id,product_id,message_type,send_user_id,read_type,create_time) VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.userId},#{item.productId},#{item.messageType},#{item.sendUserId},#{item.readType},#{item.createTime})
		</foreach>
	</insert>

	<!-- 批量插入（或者更新） -->
	<insert id ="insertOrUpdateBatch" parameterType="com.work.entity.po.UserMessage">
		INSERT INTO user_message(user_id,product_id,message_type,send_user_id,read_type,create_time) VALUES
		<foreach collection="list" item="item" separator="," >
			(#{item.userId},#{item.productId},#{item.messageType},#{item.sendUserId},#{item.readType},#{item.createTime})
		</foreach>
			on DUPLICATE key update
			user_id= VALUES(user_id),product_id= VALUES(product_id),message_type= VALUES(message_type),send_user_id= VALUES(send_user_id),read_type= VALUES(read_type),create_time= VALUES(create_time)
	</insert>

	<!-- 根据MessageId查询 -->
	<select id="selectByMessageId" resultMap="base_result_map">
		select <include refid="base_column_list"/> from user_message where message_id=#{messageId}
	</select>

	<!-- 根据MessageId更新 -->
	<update id="updateByMessageId" parameterType="com.work.entity.po.UserMessage">
		update user_message
		<set>
			<if test="bean.messageId != null">
				message_id = #{bean.messageId},
			</if>
			<if test="bean.userId != null">
				user_id = #{bean.userId},
			</if>
			<if test="bean.productId != null">
				product_id = #{bean.productId},
			</if>
			<if test="bean.messageType != null">
				message_type = #{bean.messageType},
			</if>
			<if test="bean.sendUserId != null">
				send_user_id = #{bean.sendUserId},
			</if>
			<if test="bean.readType != null">
				read_type = #{bean.readType},
			</if>
			<if test="bean.createTime != null">
				create_time = #{bean.createTime},
			</if>
		</set>
		where message_id=#{messageId}
	</update>

	<!-- 根据MessageId删除 -->
	<delete id="deleteByMessageId">
		delete from user_message where message_id=#{messageId}
	</delete>
</mapper>